define(["exports","./index-4ba3e564","./index2-929c934e","./primitiveFactory-0fd83857","./utils-170619d9","./analysis-attribute-expression2-2e4fa6e5","./analysis-boolean-input2-4cca07bb","./analysis-chip-group2-66b37993","./analysis-data-file-input2-e099b4c1","./analysis-dataset-input2-719df5b8","./analysis-dataset-input-popover2-4ec0074d","./analysis-date-input2-8c5d70f6","./analysis-expression-group2-727233ea","./analysis-field-input2-2985824f","./analysis-field-select2-d1dcbfea","./analysis-folder-input2-614117c4","./analysis-geoenrichment-databrowser2-64112bc3","./analysis-geoenrichment-input2-d0af3a75","./analysis-item-browser2-90d48785","./analysis-item-input2-199dd569","./analysis-label2-d915c3e1","./analysis-layer-input2-10805c18","./analysis-layer-input-popover2-047da354","./analysis-linear-unit-input2-cb0fc12a","./analysis-multiple-input2-632fb56d","./analysis-number-input2-cd69beec","./analysis-query-builder2-359d95da","./analysis-query-entry2-476b236a","./analysis-query-input2-ca2ddf00","./analysis-query-modal2-bc4a8674","./analysis-query-target-select2-26718e9d","./analysis-sketch2-5affb5dd","./analysis-spatial-expression2-57c2b017","./analysis-spatial-reference-input2-471e95f0","./analysis-spatial-reference-selector2-746a6bb2","./analysis-string-input2-7799d6f1","./analysis-summary-fields2-53d7ea42","./analysis-summary-fields-popover2-5b8e537a","./analysis-traffic-time-input2-e4f68e21","./analysis-tree2-f394ec74","./analysis-unsupported-input2-c5738ad3","./analysis-workflow-select2-4c58c8d7","./analysis-workflow-select-popover2-1eb81a2c"],(function(e,a,t,s,i,n,l,r,o,u,p,y,m,c,d,h,g,f,b,T,E,C,v,P,D,k,V,G,I,M,A,w,L,U,q,S,x,R,F,N,H,_,O){"use strict";const W={[s.AnalysisToolParamDataType.GPString]:{icon:"string"},[s.AnalysisToolParamDataType.GPMultiValueString]:{icon:"string"},[s.AnalysisToolParamDataType.GPBoolean]:{icon:"boolean"},[s.AnalysisToolParamDataType.GPMultiValueBoolean]:{icon:"boolean"},[s.AnalysisToolParamDataType.GPDouble]:{icon:"number"},[s.AnalysisToolParamDataType.GPMultiValueDouble]:{icon:"number"},[s.AnalysisToolParamDataType.GPLong]:{icon:"number"},[s.AnalysisToolParamDataType.GPMultiValueLong]:{icon:"number"},[s.AnalysisToolParamDataType.GPDate]:{icon:"calendar"},[s.AnalysisToolParamDataType.GPMultiValueDate]:{icon:"calendar"},[s.AnalysisToolParamDataType.GPLinearUnit]:{icon:"line-straight"},[s.AnalysisToolParamDataType.GPMultiValueLinearUnit]:{icon:"line-straight"},[s.AnalysisToolParamDataType.GPFeatureRecordSetLayer]:{icon:"feature-layer"},[s.AnalysisToolParamDataType.GPMultiValueFeatureRecordSetLayer]:{icon:"feature-layer"},[s.AnalysisToolParamDataType.GPRecordSet]:{icon:"table"},[s.AnalysisToolParamDataType.GPMultiValueRecordSet]:{icon:"tables"},[s.AnalysisToolParamDataType.GPRasterDataLayer]:{icon:"image-layer"},[s.AnalysisToolParamDataType.GPMultiValueRasterDataLayer]:{icon:"image-layer"},[s.AnalysisToolParamDataType.GPDataFile]:{icon:"data"},[s.AnalysisToolParamDataType.GPMultiValueDataFile]:{icon:"data"},[s.AnalysisToolParamDataType.GPField]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPMultiValueField]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPValueTable]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPMultiValueValueTable]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPComposite]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPMultiValueComposite]:{icon:"brackets-curly"}},z="NEVER_SET",B=new Set([s.AnalysisToolParamDataType.GPFeatureRecordSetLayer,s.AnalysisToolParamDataType.GPRecordSet]),j=a.proxyCustomElement(class extends a.H{constructor(){super(),this.__registerHost(),this.__attachShadow(),this.analysisParameterGroupInputChange=a.createEvent(this,"analysisParameterGroupInputChange",7),this.analysisHelpClick=a.createEvent(this,"analysisHelpClick",7),this.selectionOptionChange=()=>{const e=this.pickerElement;this.updateDataType(e.selectedOption.value)},this.selectedChipsChange=()=>{const e=this.pickerElement,[a]=e.selectedChips,t=a;void 0!==t?this.updateDataType(t):void 0!==this.dataType&&(e.selectedChips=[this.dataType])},this.parameterValueChanged=()=>{const e=this.mappedElement?.value;this.updateValue(e,this.value)},this.setAnalysisRef=e=>{null!=e&&(this.mappedElement=e)},this.groupLabel=void 0,this.value=void 0,this.dataType=void 0,this.required=void 0,this.visibleTypes=[],this.UIparameterInfos=void 0,this.portal=void 0,this.mapView=void 0,this.mapLayers=void 0,this.modelVariableLayers=void 0,this.pickerElement=void 0,this.mappedElement=void 0,this.UIparameterMap=new Map,this.data=new Map,this.layerIdMap=new Map}onDataTypeChange(e,a){this.updateDataType(e,a)}onVisibleTypesChange(e){this.visibleTypes=e??[]}onUIparameterInfosChange(e){this.updateWithUIParameterInfos(e),this.updateValue(this.currentDataMapValue,this.value)}async componentWillLoad(){({strings:this.strings,dir:this.dir}=await t.fetchComponentLocaleStrings(this.hostElement,a.getAssetPath("."))),this.updateWithUIParameterInfos(this.UIparameterInfos),this.UIparameterMap.forEach(((e,a)=>{this.applyDefaultValue(a)})),this.updateValue(this.currentDataMapValue,this.value)}async checkValidity(){return Promise.resolve(this.validate())}async validate(){let e;return e=void 0!==this.mappedElement&&"checkValidity"in this.mappedElement?await this.mappedElement.checkValidity():!0!==this.required||void 0!==this.value,e}saveValue(e,a){const t=this.getParameterValueDataType(e,a),s=void 0!==t?this.data.get(t):void 0;void 0!==t&&a!==s&&this.data.set(t,a)}updateValue(e,a){if(e!==a){const t=this.getParameterValueDataType(this.dataType,a);t!==s.AnalysisToolParamDataType.GPComposite&&this.saveValue(t,a);const i=this.calculateNewValue(t,e),n=this.getParameterValueDataType(this.dataType,i);this.saveValue(n,i),this.value=i,this.analysisParameterGroupInputChange.emit({data:i})}}updateDataType(e,a=this.currentDataType){if(void 0!==e&&e!==a){this.isGPComposite(this.value)||a===s.AnalysisToolParamDataType.GPComposite||(this.dataType=e),this.applyDefaultValue(e);const t=this.data.get(e);this.updateValue(t,this.value)}}getNewLayerIdState(e,a){return void 0!==e?e:a===z?z:"NO_LAYER"}updateLayerIdMap(e,a){const t=this.layerIdMap.get(e)??z,s=a?.id,i=this.getNewLayerIdState(s,t);this.layerIdMap.set(e,i),i!==t&&t!==z&&(this.saveValue(e,void 0),this.applyDefaultValue(e))}updateUIParameterMap(e){const{dataType:a,...t}=e;this.UIparameterMap.set(a,t)}updateDataMap(e){const{dataType:a,value:t,mapLayer:s}=e;void 0!==a&&this.updateLayerIdMap(a,s);const i=t??this.data.get(a),n=this.calculateNewValue(a,i);this.saveValue(a,n)}calculateNewValue(e,a){return this.dataType===s.AnalysisToolParamDataType.GPComposite&&!1===this.isGPComposite(a)?{dataType:e,value:a}:a}getParameterValueDataType(e,a){return this.isGPComposite(a)?a.dataType:e}isGPComposite(e){return"object"==typeof e&&null!==e&&"dataType"in e&&"value"in e}applyDefaultValue(e){const{defaultValue:a}=this.UIparameterMap.get(e)||{},t=this.data.get(e),s=this.isGPComposite(t)?t.value:t,i=this.isGPComposite(a)?a.value:a;if(null==s&&null!=i){const a=this.calculateNewValue(e,i);this.saveValue(e,a)}}updateWithUIParameterInfos(e){const a=this.getParameterValueDataType(this.dataType,this.value);this.saveValue(a,this.value),this.UIparameterMap.clear();const t=e??[];for(const e of t)this.updateUIParameterMap(e),this.updateDataMap(e)}get types(){return[...this.UIparameterMap.keys()].filter((e=>0===this.visibleTypes.length||this.visibleTypes.includes(e)))}get currentDataType(){let e=this.getParameterValueDataType(this.dataType,this.value);return void 0!==e&&this.types.includes(e)||(e=this.types[0],this.dataType=this.types[0]),e}get currentDataMapValue(){return this.data.get(this.currentDataType)}getChipGroupData(){return this.types.reduce(((e,a)=>{const t=this.UIparameterMap.get(a),{icon:s}=W[a],i=t?.parameterGroupDataTypeLabel??this.strings[a]??a;return e.labels.push(i),e.icons.push(s),e}),{labels:[],icons:[]})}renderChipGroup(){const e=this.types,t=this.getChipGroupData();return a.h("analysis-chip-group",{ref:e=>{this.pickerElement=e},selectionMode:"single",value:e,chipLabel:t.labels,selectedChips:[this.currentDataType],iconLabel:t.icons,label:this.groupLabel,required:!0,onAnalysisChipGroupSelectionChange:this.selectedChipsChange})}renderSelect(){return a.h("calcite-select",{ref:e=>{this.pickerElement=e},label:this.strings.gpSelection,onCalciteSelectChange:this.selectionOptionChange,scale:i.UIDefaults.Scale},a.h("calcite-option-group",{label:this.strings.gpTypes},this.types.map((e=>a.h("calcite-option",{key:e,value:e},this.strings[e]??e)))))}getSelectedLayerForParameter(e,a){const s=a?.url??a?.layerDefinition?.name;return B.has(e)&&"string"==typeof s?t.findExistingLayer(s,this.mapLayers??[]):void 0}renderDefaultComponent(){const e=this.currentDataType,t=this.isGPComposite(this.currentDataMapValue)?this.currentDataMapValue.value:this.currentDataMapValue,i=this.UIparameterMap.get(e)??{},n={selectedLayers:this.getSelectedLayerForParameter(e,t),...i};return a.h(s.AnalysisPrimitiveParameter,{key:e,name:e,dataType:e,portal:this.portal,user:this.portal?.user,mapView:this.mapView,mapLayers:this.mapLayers,modelVariableLayers:this.modelVariableLayers,...n,value:t,required:this.required,onSetRef:this.setAnalysisRef,onValueChange:this.parameterValueChanged})}render(){return a.h(a.Host,{key:"12d05afb7addf820cfb146931a2d48c41b6e2a38",dir:this.dir},a.h("analysis-label",{key:"466206939cdc1f3cc1e798fc3f3e895cf6fbf928",label:this.groupLabel,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}),this.types.length<=2?this.renderChipGroup():this.renderSelect(),this.renderDefaultComponent())}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get watchers(){return{dataType:["onDataTypeChange"],visibleTypes:["onVisibleTypesChange"],UIparameterInfos:["onUIparameterInfosChange"]}}static get style(){return":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}:host{--calcite-color-border-input:var(--analysis-ui-border-input);margin-bottom:var(--analysis-half-spacing)}"}},[1,"analysis-parameter-group",{groupLabel:[513,"group-label"],value:[1032],dataType:[1537,"data-type"],required:[516],visibleTypes:[16],UIparameterInfos:[16],portal:[16],mapView:[16],mapLayers:[16],modelVariableLayers:[16],pickerElement:[32],mappedElement:[32],UIparameterMap:[32],data:[32],layerIdMap:[32],checkValidity:[64]},void 0,{dataType:["onDataTypeChange"],visibleTypes:["onVisibleTypesChange"],UIparameterInfos:["onUIparameterInfosChange"]}]);function Y(){"undefined"!=typeof customElements&&["analysis-parameter-group","analysis-attribute-expression","analysis-boolean-input","analysis-chip-group","analysis-data-file-input","analysis-dataset-input","analysis-dataset-input-popover","analysis-date-input","analysis-expression-group","analysis-field-input","analysis-field-select","analysis-folder-input","analysis-geoenrichment-databrowser","analysis-geoenrichment-input","analysis-item-browser","analysis-item-input","analysis-label","analysis-layer-input","analysis-layer-input-popover","analysis-linear-unit-input","analysis-multiple-input","analysis-number-input","analysis-query-builder","analysis-query-entry","analysis-query-input","analysis-query-modal","analysis-query-target-select","analysis-sketch","analysis-spatial-expression","analysis-spatial-reference-input","analysis-spatial-reference-selector","analysis-string-input","analysis-summary-fields","analysis-summary-fields-popover","analysis-traffic-time-input","analysis-tree","analysis-unsupported-input","analysis-workflow-select","analysis-workflow-select-popover"].forEach((e=>{switch(e){case"analysis-parameter-group":customElements.get(e)||customElements.define(e,j);break;case"analysis-attribute-expression":customElements.get(e)||n.defineCustomElement();break;case"analysis-boolean-input":customElements.get(e)||l.defineCustomElement();break;case"analysis-chip-group":customElements.get(e)||r.defineCustomElement();break;case"analysis-data-file-input":customElements.get(e)||o.defineCustomElement();break;case"analysis-dataset-input":customElements.get(e)||u.defineCustomElement();break;case"analysis-dataset-input-popover":customElements.get(e)||p.defineCustomElement();break;case"analysis-date-input":customElements.get(e)||y.defineCustomElement();break;case"analysis-expression-group":customElements.get(e)||m.defineCustomElement();break;case"analysis-field-input":customElements.get(e)||c.defineCustomElement();break;case"analysis-field-select":customElements.get(e)||d.defineCustomElement();break;case"analysis-folder-input":customElements.get(e)||h.defineCustomElement();break;case"analysis-geoenrichment-databrowser":customElements.get(e)||g.defineCustomElement();break;case"analysis-geoenrichment-input":customElements.get(e)||f.defineCustomElement();break;case"analysis-item-browser":customElements.get(e)||b.defineCustomElement();break;case"analysis-item-input":customElements.get(e)||T.defineCustomElement();break;case"analysis-label":customElements.get(e)||E.defineCustomElement();break;case"analysis-layer-input":customElements.get(e)||C.defineCustomElement();break;case"analysis-layer-input-popover":customElements.get(e)||v.defineCustomElement();break;case"analysis-linear-unit-input":customElements.get(e)||P.defineCustomElement();break;case"analysis-multiple-input":customElements.get(e)||D.defineCustomElement();break;case"analysis-number-input":customElements.get(e)||k.defineCustomElement();break;case"analysis-query-builder":customElements.get(e)||V.defineCustomElement();break;case"analysis-query-entry":customElements.get(e)||G.defineCustomElement();break;case"analysis-query-input":customElements.get(e)||I.defineCustomElement();break;case"analysis-query-modal":customElements.get(e)||M.defineCustomElement();break;case"analysis-query-target-select":customElements.get(e)||A.defineCustomElement();break;case"analysis-sketch":customElements.get(e)||w.defineCustomElement();break;case"analysis-spatial-expression":customElements.get(e)||L.defineCustomElement();break;case"analysis-spatial-reference-input":customElements.get(e)||U.defineCustomElement();break;case"analysis-spatial-reference-selector":customElements.get(e)||q.defineCustomElement();break;case"analysis-string-input":customElements.get(e)||S.defineCustomElement();break;case"analysis-summary-fields":customElements.get(e)||x.defineCustomElement();break;case"analysis-summary-fields-popover":customElements.get(e)||R.defineCustomElement();break;case"analysis-traffic-time-input":customElements.get(e)||F.defineCustomElement();break;case"analysis-tree":customElements.get(e)||N.defineCustomElement();break;case"analysis-unsupported-input":customElements.get(e)||H.defineCustomElement();break;case"analysis-workflow-select":customElements.get(e)||_.defineCustomElement();break;case"analysis-workflow-select-popover":customElements.get(e)||O.defineCustomElement()}}))}Y(),e.AnalysisParameterGroup=j,e.defineCustomElement=Y}));